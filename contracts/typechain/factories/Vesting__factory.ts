/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Vesting, VestingInterface } from "../Vesting";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "newToken",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newUser",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "newAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "newSlicePeriod",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "newStartTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "newDuration",
        type: "uint256",
      },
    ],
    name: "addUser",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newUser",
        type: "address",
      },
    ],
    name: "available",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "vestings",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "claimed",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "slicePeriod",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "startTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "duration",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60a060405234801561001057600080fd5b50604051610baa380380610baa83398101604081905261002f916100ac565b6100383361005c565b6001600160a01b03811661004b57600080fd5b6001600160a01b03166080526100dc565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156100be57600080fd5b81516001600160a01b03811681146100d557600080fd5b9392505050565b608051610aac6100fe6000396000818161017901526104ad0152610aac6000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80638da5cb5b1161005b5780638da5cb5b146100d8578063daf49863146100fd578063f2fde38b14610161578063fc0c546a1461017457600080fd5b806310098ad51461008d57806317bac95f146100b35780634e71d92d146100c8578063715018a6146100d0575b600080fd5b6100a061009b3660046108bd565b61019b565b6040519081526020015b60405180910390f35b6100c66100c13660046108d8565b6102c0565b005b6100c6610422565b6100c66104d7565b6000546001600160a01b03165b6040516001600160a01b0390911681526020016100aa565b61013961010b3660046108bd565b6001602081905260009182526040909120805491810154600282015460038301546004909301549192909185565b604080519586526020860194909452928401919091526060830152608082015260a0016100aa565b6100c661016f3660046108bd565b61050d565b6100e57f000000000000000000000000000000000000000000000000000000000000000081565b6001600160a01b0381166000908152600160208181526040808420815160a08101835281548152938101549284019290925260028201549083015260038101546060830181905260049091015460808301524210156101fd5750600092915050565b6000816080015182606001516102139190610930565b905060008142116102245742610226565b815b90508181141561024a57602083015183516102419190610948565b95945050505050565b600083606001518261025c9190610948565b90506000846040015182610270919061095f565b905060008560400151826102849190610981565b9050856020015186608001518760000151836102a09190610981565b6102aa919061095f565b6102b49190610948565b98975050505050505050565b6000546001600160a01b031633146102f35760405162461bcd60e51b81526004016102ea906109a0565b60405180910390fd5b6001600160a01b038516600090815260016020526040902054156103595760405162461bcd60e51b815260206004820181905260248201527f54686973207573657220686173206265656e20616c726561647920616464656460448201526064016102ea565b814211156103bd5760405162461bcd60e51b815260206004820152602b60248201527f43616e74206d616b65207374617274206265666f726520626c6f636b2e74696d60448201526a657374616d702074696d6560a81b60648201526084016102ea565b6040805160a0810182529485526000602080870182815287840196875260608801958652608088019485526001600160a01b03909816825260019081905291902094518555945194840194909455905160028301555160038201559051600490910155565b600061042d3361019b565b9050600081116104785760405162461bcd60e51b815260206004820152601660248201527543616e7420636c61696d207a65726f20746f6b656e7360501b60448201526064016102ea565b336000908152600160208190526040822001805483929061049a908490610930565b909155506104d490506001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001633836105a5565b50565b6000546001600160a01b031633146105015760405162461bcd60e51b81526004016102ea906109a0565b61050b60006105fc565b565b6000546001600160a01b031633146105375760405162461bcd60e51b81526004016102ea906109a0565b6001600160a01b03811661059c5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016102ea565b6104d4816105fc565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b1790526105f790849061064c565b505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006106a1826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661071e9092919063ffffffff16565b8051909150156105f757808060200190518101906106bf91906109d5565b6105f75760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016102ea565b606061072d8484600085610737565b90505b9392505050565b6060824710156107985760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016102ea565b6001600160a01b0385163b6107ef5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016102ea565b600080866001600160a01b0316858760405161080b9190610a27565b60006040518083038185875af1925050503d8060008114610848576040519150601f19603f3d011682016040523d82523d6000602084013e61084d565b606091505b509150915061085d828286610868565b979650505050505050565b60608315610877575081610730565b8251156108875782518084602001fd5b8160405162461bcd60e51b81526004016102ea9190610a43565b80356001600160a01b03811681146108b857600080fd5b919050565b6000602082840312156108cf57600080fd5b610730826108a1565b600080600080600060a086880312156108f057600080fd5b6108f9866108a1565b97602087013597506040870135966060810135965060800135945092505050565b634e487b7160e01b600052601160045260246000fd5b600082198211156109435761094361091a565b500190565b60008282101561095a5761095a61091a565b500390565b60008261097c57634e487b7160e01b600052601260045260246000fd5b500490565b600081600019048311821515161561099b5761099b61091a565b500290565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6000602082840312156109e757600080fd5b8151801515811461073057600080fd5b60005b83811015610a125781810151838201526020016109fa565b83811115610a21576000848401525b50505050565b60008251610a398184602087016109f7565b9190910192915050565b6020815260008251806020840152610a628160408501602087016109f7565b601f01601f1916919091016040019291505056fea2646970667358221220b1b4d2f19c5919e30d6386791c1878d66f2bcb771c0b71864c968ed4342088c464736f6c634300080a0033";

export class Vesting__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    newToken: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Vesting> {
    return super.deploy(newToken, overrides || {}) as Promise<Vesting>;
  }
  getDeployTransaction(
    newToken: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(newToken, overrides || {});
  }
  attach(address: string): Vesting {
    return super.attach(address) as Vesting;
  }
  connect(signer: Signer): Vesting__factory {
    return super.connect(signer) as Vesting__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VestingInterface {
    return new utils.Interface(_abi) as VestingInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Vesting {
    return new Contract(address, _abi, signerOrProvider) as Vesting;
  }
}
